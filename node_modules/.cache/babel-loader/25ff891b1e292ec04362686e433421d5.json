{"ast":null,"code":"var _jsxFileName = \"/Users/red/Desktop/lambda/projects/nasa-photo-of-the-day/src/NasaImg.js\";\nimport React from \"react\";\nimport NasaCard from \"./NasaCard\";\n\nconst NasaImg = props => {\n  const imgUrl = props.imgUrl;\n  return React.createElement(\"div\", {\n    className: \"nasa-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    src: imgUrl,\n    alt: \"nasa-video\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })); // return(\n  //     <div className = \"nasa-img\">\n  //     <img src='https://pbs.twimg.com/profile_images/1074223648/nasalogo_twitter_400x400.jpg'/>\n  //     </div>\n  // );\n};\n\nexport default NasaImg; // In App.js (or where ever you wanted to fetch the data) add state for the data you'll be getting from NASA.\n// Add an effect hook to handle the API call side effect.\n// Go to the NASA APOD API docs and read through the docs to see how to make the API call.\n// You don't need an API key. However you may need one if you exceed the API request limits.\n// Using the endpoint given, fetch the data using axios.\n// In your .then() make sure to console.log the response so you can look at the shape of the data. ðŸ˜ƒ\n// Before you add your data to state, make sure your effect hook has a dependency array (probably empty, since we don't want this effect synced up to any state/props), otherwise you will start an infinite loop, and you will exceed the API rate limits of the DEMO_KEY and need to use a real API_KEY.","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/nasa-photo-of-the-day/src/NasaImg.js"],"names":["React","NasaCard","NasaImg","props","imgUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,QAChBC,MADgB,GACND,KADM,CAChBC,MADgB;AAGvB,SACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAO,IAAA,GAAG,EAAEA,MAAZ;AAAoB,IAAA,GAAG,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,CAHuB,CAWvB;AACA;AACA;AACA;AACA;AACH,CAhBD;;AAkBA,eAAeF,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"\nimport NasaCard from \"./NasaCard\"\n\nconst NasaImg = (props) => {\n    const {imgUrl} = props;\n\n    return(\n        <div className = \"nasa-img\">\n        {/* <img src={imgUrl} alt='nasa-img'/> */}\n        <video src={imgUrl} alt='nasa-video'/>\n        {/* I am the text after the video */}\n        </div>\n    );\n \n    // return(\n    //     <div className = \"nasa-img\">\n    //     <img src='https://pbs.twimg.com/profile_images/1074223648/nasalogo_twitter_400x400.jpg'/>\n    //     </div>\n    // );\n}\n\nexport default NasaImg;\n\n\n// In App.js (or where ever you wanted to fetch the data) add state for the data you'll be getting from NASA.\n// Add an effect hook to handle the API call side effect.\n// Go to the NASA APOD API docs and read through the docs to see how to make the API call.\n// You don't need an API key. However you may need one if you exceed the API request limits.\n// Using the endpoint given, fetch the data using axios.\n// In your .then() make sure to console.log the response so you can look at the shape of the data. ðŸ˜ƒ\n// Before you add your data to state, make sure your effect hook has a dependency array (probably empty, since we don't want this effect synced up to any state/props), otherwise you will start an infinite loop, and you will exceed the API rate limits of the DEMO_KEY and need to use a real API_KEY."]},"metadata":{},"sourceType":"module"}