{"ast":null,"code":"var _jsxFileName = \"/Users/red/Desktop/lambda/projects/nasa-photo-of-the-day/src/NasaImg.js\";\nimport React from \"react\";\nimport { imgUrl } from \"./NasaImg\";\n\nconst NasaImg = ({\n  imgUrl\n}) => {\n  return React.createElement(\"div\", {\n    className: \"nasa-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    src: imgUrl,\n    alt: \"nasa-video\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), \"I am the text after the video\"); // return(\n  //     <div className = \"nasa-img\">\n  //     <img src='https://pbs.twimg.com/profile_images/1074223648/nasalogo_twitter_400x400.jpg'/>\n  //     </div>\n  // );\n};\n\nexport default NasaImg; // In App.js (or where ever you wanted to fetch the data) add state for the data you'll be getting from NASA.\n// Add an effect hook to handle the API call side effect.\n// Go to the NASA APOD API docs and read through the docs to see how to make the API call.\n// You don't need an API key. However you may need one if you exceed the API request limits.\n// Using the endpoint given, fetch the data using axios.\n// In your .then() make sure to console.log the response so you can look at the shape of the data. ðŸ˜ƒ\n// Before you add your data to state, make sure your effect hook has a dependency array (probably empty, since we don't want this effect synced up to any state/props), otherwise you will start an infinite loop, and you will exceed the API rate limits of the DEMO_KEY and need to use a real API_KEY.","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/nasa-photo-of-the-day/src/NasaImg.js"],"names":["React","imgUrl","NasaImg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAc;AAE1B,SACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAO,IAAA,GAAG,EAAEA,MAAZ;AAAoB,IAAA,GAAG,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,kCADJ,CAF0B,CAU1B;AACA;AACA;AACA;AACA;AACH,CAfD;;AAiBA,eAAeC,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"\nimport {imgUrl} from \"./NasaImg\"\n\nconst NasaImg = ({imgUrl}) => {\n\n    return(\n        <div className = \"nasa-img\">\n        {/* <img src={imgUrl} alt='nasa-img'/> */}\n        <video src={imgUrl} alt='nasa-video'/>\n        I am the text after the video\n        </div>\n    );\n \n    // return(\n    //     <div className = \"nasa-img\">\n    //     <img src='https://pbs.twimg.com/profile_images/1074223648/nasalogo_twitter_400x400.jpg'/>\n    //     </div>\n    // );\n}\n\nexport default NasaImg;\n\n\n// In App.js (or where ever you wanted to fetch the data) add state for the data you'll be getting from NASA.\n// Add an effect hook to handle the API call side effect.\n// Go to the NASA APOD API docs and read through the docs to see how to make the API call.\n// You don't need an API key. However you may need one if you exceed the API request limits.\n// Using the endpoint given, fetch the data using axios.\n// In your .then() make sure to console.log the response so you can look at the shape of the data. ðŸ˜ƒ\n// Before you add your data to state, make sure your effect hook has a dependency array (probably empty, since we don't want this effect synced up to any state/props), otherwise you will start an infinite loop, and you will exceed the API rate limits of the DEMO_KEY and need to use a real API_KEY."]},"metadata":{},"sourceType":"module"}